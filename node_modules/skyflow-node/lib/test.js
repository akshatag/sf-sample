"use strict";

var _ = require(".");

var client = (0, _.connect)('c117973f904011ea95ba2e321592fd49', 'vasanth.kumar@zemosolabs.com', 'Yolo@1234', 'e0d20c1ac27411ea86e12a0fa7c2cadf', 'pnhDUe9UmpY2NORQY1_MkyXH1Mk=');
var recordFields = [{
  name: 'address_city',
  value: 'kid'
}];
var records = {
  records: [{
    fields: [{
      name: 'address_city',
      value: 'kiddo'
    }]
  }]
}; // console.log(client)
// setTimeout(() => {
//     client.insertRecord('kfd75b61c20a11eaa9f392fed63ca4c6', recordFields)
//     .then(res => {
//         console.log(res)
//     })
//     .catch(err => console.log(err));
// }, 3000);
// setTimeout(() => {
// client.insertBulkRecord('kfd75b61c20a11eaa9f392fed63ca4c6', records)
//     .then(res => {
//         console.log(res)
//     })
//     .catch(err => console.log(err));
// }, 3000);
// setTimeout(() => {
//     client.getRecord('kfd75b61c20a11eaa9f392fed63ca4c6', '01010000042b271032d524000528a30b')
//     .then(res => {
//         console.log(res)
//     })
//     .catch(err => console.log(err));
// }, 3000);
// setTimeout(() => {
//     client.updateRecord('q0ba0035c20a11eaa9f392fed63ca4c6', '010100004a80f3b0cbaa98b3c1bf7cd5', recordFields)
//     .then(res => {
//         console.log(res)
//     })
//     .catch(err => console.log(err));
// }, 3000);

setTimeout(function () {
  client.deleteRecord('kfd75b61c20a11eaa9f392fed63ca4c6', '01010000042b271032d524000528a30b').then(function (res) {
    console.log(res);
  }).catch(function (err) {
    return console.log(err);
  });
}, 3000); // setTimeout(() => {
//     client.getNotebookByName('kfd75b61c20a11eaa9f392fed63ca4c6')
//     .then(res => {
//         console.log(res)
//     })
//     .catch(err => console.log(err));
// }, 3000);

function insertRecord(vaultId, recordFields) {
  var _this = this;

  return this.getNotebookByName(vaultId).then(function (res) {
    // console.log(res.result)
    return axios.post(_this.baseUrl + notebookUrl + '/' + res.result.notebook.ID + url, {
      fields: recordFields,
      notebookID: res.result.notebook.ID
    }, {
      headers: _this.defaultHeaders
    }).then(function (res) {
      return res.data;
    }).catch(function (err) {
      return err;
    });
  }).catch(function (err) {
    console.log(err);
    throw new Error('Invalid vault');
  });
}