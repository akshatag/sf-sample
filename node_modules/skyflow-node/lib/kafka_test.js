var _typeof = require("@babel/runtime/helpers/typeof");

var kafka = require('kafka-node');

var fs = require('fs');

try {
  var client = new kafka.KafkaClient({
    idleConnection: 24 * 60 * 60 * 1000,
    kafkaHost: 'pkc-4kgmg.us-west-2.aws.confluent.cloud:9092',
    sasl: {
      mechanism: 'plain',
      username: 'GQMISVNBUNBIV2FB',
      password: '/J8o8ZgFBBopQkt0LnGF0kB6YUfozyLWtrJ5kBCzJxu3tsRq4efzzWh8eMyjLzB9'
    },
    sslOptions: {
      rejectUnauthorized: false // ca: [fs.readFileSync('/home/zadmin/Downloads/cert.crt', 'utf-8')],
      // cert: [fs.readFileSync('./client.cer.pem', 'utf-8')],
      // key: [fs.readFileSync('./client.key.pem', 'utf-8')],

    }
  });
  var consumer = new kafka.Consumer(client, [{
    topic: 'policy-updates'
  }], {
    // groupId: "Consumer-group",
    // Auto commit config
    autoCommit: true,
    autoCommitMsgCount: 100,
    autoCommitIntervalMs: 5000,
    // Fetch message config
    fetchMaxWaitMs: 1000000,
    // fetchMinBytes: 1,
    fetchMaxBytes: 1024 * 10,
    fromOffset: true,
    fromBeginning: false,
    //to stop reading from beggening
    encoding: 'utf8' // fromOffset: false

  });
  console.log(consumer);
  client.on('ready', function () {
    console.log('ready');
  });
  client.on('connect', function () {
    console.log('connect');
  }); // client.on('brokersChanged', () => {
  //     console.log('brokersChanged')
  // })

  consumer.on('message', function (message) {
    // pubsub.publish('POST_ADDED', { author: message.value })
    console.log("MESSAGE ===>", _typeof(message));
  });
  consumer.on('error', function (error) {
    //  handle error 
    console.log('error', error);
  });
} catch (error) {
  // catch error trace
  console.log(error);
}