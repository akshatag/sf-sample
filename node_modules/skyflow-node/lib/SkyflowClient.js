"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Auth = _interopRequireDefault(require("./api/Auth"));

var _Records = _interopRequireDefault(require("./api/Records"));

var _Notebooks = _interopRequireDefault(require("./api/Notebooks"));

var _http = require("./http");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
     * Client to connect to Skyflow api
     * 
*/
var SkyflowClient = function SkyflowClient() {
  this.initialize.apply(this, arguments);
};

var prodBaseUrl = "vault.skyflowapis.com";
SkyflowClient.prototype = {
  initialize: function initialize(accountName, workspaceName, vaultId, credentials) // + token
  {
    var _this = this;

    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    this.accountName = accountName;
    this.workspaceName = workspaceName;
    this.vaultId = vaultId;
    this.credentials = credentials;
    this.options = options;
    this.version = '/' + (this.options.version || 'v1');
    this.baseUrl = prodBaseUrl + this.version;
    this.vaultUrl = 'https://' + workspaceName + '.' + accountName + '.' + this.baseUrl + '/vaults/' + vaultId;

    if (this.options.accessToken) {
      this.defaultHeaders['Authorization'] = 'Bearer ' + res.accessToken;
      this.accessToken = res.accessToken;
    }

    this.handlers = {};
    this.browser = typeof this.options.browser !== 'undefined' ? this.options.browser : typeof window !== 'undefined';
    this.node = !this.browser; // this.requestAgent = HTTPSAgent

    if (this.browser && this.credentials) {
      throw new Error('You are publicly sharing your App Secret. Do not expose the App Secret in browsers, "native" mobile apps, or other non-trusted environments.');
    }

    this.defaultHeaders = {};
    this.getAccessToken().then(function (res) {
      _this.defaultHeaders['Authorization'] = 'Bearer ' + res.accessToken;
      _this.accessToken = res.accessToken;
    }).catch(function (err) {
      return err;
    });
  },
  callApi: function callApi(callback, args) {
    var _this2 = this;

    if ((0, _http.isTokenValid)(this.accessToken)) {
      return callback(_objectSpread({}, args));
    } else {
      return this.getAccessToken().then(function (res) {
        _this2.defaultHeaders['Authorization'] = 'Bearer ' + res.accessToken;
        _this2.accessToken = res.accessToken;
        return callback(_objectSpread({}, args));
      }).catch(function (err) {
        return err;
      });
    }
  }
};
(0, _extends2.default)(SkyflowClient.prototype, _Auth.default);
(0, _extends2.default)(SkyflowClient.prototype, _Records.default);
(0, _extends2.default)(SkyflowClient.prototype, _Notebooks.default);
module.exports = SkyflowClient;